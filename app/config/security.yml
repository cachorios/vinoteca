security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
        UserAdminBundle\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            #id: fos_user.user_provider.username
            id: fos_user.user_provider.username_email
        admin_users:
            entity: { class: UserAdminBundle:User, property: username }

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                default_target_path: /profile
                always_use_default_target_path: true
            logout:       true
            anonymous:    true
        admin_area:
            # this firewall applies to all URLs
            pattern: ^/admin
            # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers
            anonymous: true
            # This allows the user to login by submitting a username and password
            # Reference: http://symfony.com/doc/current/cookbook/security/form_login.html
            form_login:
                # The route name that the login form submits to
                check_path: security_login_check
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: security_login_form
            logout:
                # The route name the user can go to in order to logout
                path: security_logout
                # The name of the route to redirect to after logging out
                target: homepage



    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, roles: [ROLE_ADMIN] }
        - { path: ^/admin/usuario, role: ROLE_ADMIN }
        - { path: ^/app/, role: ROLE_EMPLEADOR }
        - { path: ^/profile/, roles: [ROLE_USER] }
#        - { path: ^/, roles: [ROLE_USER] }